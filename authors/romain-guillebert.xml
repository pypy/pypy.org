<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>PyPy (Posts by Romain Guillebert)</title><link>https://www.pypy.org/</link><description></description><atom:link href="https://www.pypy.org/authors/romain-guillebert.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents © 2025 &lt;a href="mailto:pypy-dev@pypy.org"&gt;The PyPy Team&lt;/a&gt; </copyright><lastBuildDate>Mon, 07 Jul 2025 11:01:29 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>NumPyPy status - January 2015</title><link>https://www.pypy.org/posts/2015/02/numpypy-status-january-2015-5092986229783279944.html</link><dc:creator>Romain Guillebert</dc:creator><description>&lt;p&gt;Hi Everyone&lt;br&gt;
&lt;br&gt;
Here is what has been done in January thanks to the &lt;a href="https://pypy.org/numpydonate.html" target="_blank"&gt;funding of NumPyPy&lt;/a&gt;, I would like to thank all the donors and tell you that you can still donate :&lt;br&gt;
&lt;/p&gt;&lt;ul&gt;
&lt;li&gt;I have focused on implementing the object dtype this month, it is now possible to store objects inside ndarrays using the object dtype&lt;/li&gt;
&lt;li&gt;It is also possible to add an object ndarray to any other ndarray (implementing other operators is trivial)&lt;/li&gt;
&lt;/ul&gt;
&lt;div&gt;
The next things I plan on working on next are :&lt;/div&gt;
&lt;div&gt;
&lt;ul&gt;
&lt;li&gt;Implementing the missing operations for object arrays&lt;/li&gt;
&lt;li&gt;Implementing garbage collection support for object arrays (currently, storing an object inside an ndarray doesn't keep the object alive)&lt;/li&gt;
&lt;li&gt;Packaging NumPyPy on PyPI&lt;/li&gt;
&lt;/ul&gt;
&lt;div&gt;
Cheers&lt;/div&gt;
&lt;/div&gt;
&lt;div&gt;
Romain&lt;/div&gt;</description><guid>https://www.pypy.org/posts/2015/02/numpypy-status-january-2015-5092986229783279944.html</guid><pubDate>Wed, 11 Feb 2015 14:46:00 GMT</pubDate></item><item><title>NumPy status update</title><link>https://www.pypy.org/posts/2013/11/numpy-status-update-1609808546418002632.html</link><dc:creator>Romain Guillebert</dc:creator><description>&lt;span style="font-family: inherit;"&gt;Here is what has been happening with NumPy in PyPy in October thanks to the people who donated to the &lt;/span&gt;&lt;a href="https://pypy.org/numpydonate.html" style="font-family: inherit;" target="_blank"&gt;NumPyPy proposal&lt;/a&gt;&lt;span style="font-family: inherit;"&gt;:&lt;/span&gt;&lt;br&gt;
&lt;span style="font-family: inherit;"&gt;&lt;br&gt;
&lt;/span&gt; &lt;span style="font-family: inherit;"&gt;The biggest change is that we shifted to using an &lt;a href="https://bitbucket.org/pypy/numpy" target="_blank"&gt;external fork of numpy&lt;/a&gt; rather than a minimal numpypy module. The idea is that we will be able to &lt;/span&gt;reuse&lt;span style="font-family: inherit;"&gt; most of the upstream pure-python numpy components, replacing the C modules with appropriate RPython micronumpy pieces at the correct places in the module namespace.&lt;/span&gt;&lt;br&gt;
&lt;span style="font-family: inherit;"&gt;&lt;br&gt;
&lt;/span&gt; &lt;span style="font-family: inherit;"&gt;The numpy fork should work just as well as the old numpypy for functionality that existed previously, and also include much new functionality from the pure-python numpy pieces that simply hadn't been imported yet in numpypy. However, this new functionality will not have been "hand picked" to only include pieces that work, so you may run into functionality that relies on unimplemented components (which should fail with user-level exceptions).&lt;/span&gt;&lt;br&gt;
&lt;span style="font-family: inherit;"&gt;&lt;br&gt;
&lt;/span&gt; &lt;span style="font-family: inherit;"&gt;This setup also allows us to run the entire numpy test suite, which will help in directing future compatibility development. The recent PyPy release includes these changes, so download it and let us know how it works! And if you want to live on the edge, the nightly includes even more numpy progress made in November.&lt;/span&gt;&lt;br&gt;
&lt;span style="font-family: inherit;"&gt;&lt;br&gt;
&lt;/span&gt; &lt;span style="font-family: inherit;"&gt;To install the fork, download the latest release, and then install numpy eith&lt;/span&gt;er separately with a virtualenv: &lt;tt class="docutils literal"&gt;pip install git+https://bitbucket.org/pypy/numpy.git&lt;/tt&gt;; or directly: &lt;tt class="docutils literal"&gt;git clone https://bitbucket.org/pypy/numpy.git; cd numpy; pypy setup.py install&lt;/tt&gt;.&lt;br&gt;

&lt;br&gt;&lt;i&gt;&lt;b&gt;EDIT:&lt;/b&gt; if you install numpy as root, you may need to also import it once as root before it works: &lt;tt class="docutils literal"&gt;sudo pypy -c 'import numpy'&lt;/tt&gt;&lt;/i&gt;&lt;br&gt;

&lt;span style="font-family: inherit;"&gt;&lt;br&gt;
&lt;/span&gt; &lt;span style="font-family: inherit;"&gt;Along with this change, progress was made in fixing internal micronumpy bugs and increasing compatibility:&lt;/span&gt;&lt;br&gt;
&lt;ul&gt;&lt;li&gt;&lt;span style="font-family: inherit;"&gt;&lt;span style="font-family: inherit;"&gt;Fixed a bug with strings in record dtypes&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span style="font-family: inherit;"&gt;&lt;span style="font-family: inherit;"&gt;Fixed a bug wh&lt;/span&gt;&lt;span style="background-color: white; font-family: inherit;"&gt;ere the multiplication of an ndarray with a Python int or float resulted in loss of the array's dtype&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span style="font-family: inherit;"&gt;&lt;span style="background-color: white; font-family: inherit;"&gt;Fixed several segfaults encountered in the numpy test suite (suite should run now without segfaulting)&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;span style="font-family: inherit;"&gt;&lt;span style="background-color: white;"&gt;&lt;br&gt;
&lt;/span&gt;&lt;/span&gt; &lt;span style="font-family: inherit;"&gt;&lt;span style="background-color: white;"&gt;We also began working on __array_prepare__ and __array_wrap__, which are necessary pieces for a working matplotlib module.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;
&lt;span style="font-family: inherit;"&gt;&lt;span style="background-color: white;"&gt;&lt;br&gt;
&lt;/span&gt;&lt;/span&gt; Cheers,&lt;br&gt;
Romain and Brian</description><category>numpy</category><guid>https://www.pypy.org/posts/2013/11/numpy-status-update-1609808546418002632.html</guid><pubDate>Fri, 15 Nov 2013 19:30:00 GMT</pubDate></item><item><title>Numpy Status Update</title><link>https://www.pypy.org/posts/2013/09/numpy-status-update-5160363918470470887.html</link><dc:creator>Romain Guillebert</dc:creator><description>&lt;p&gt;Hi everyone&lt;br&gt;
&lt;br&gt;
Thanks to the people who donated money to the &lt;a href="https://pypy.org/numpydonate.html" target="_blank"&gt;numpy proposal&lt;/a&gt;, here is what I've been working on recently :&lt;br&gt;
&lt;br&gt;
- Fixed conversion from a numpy complex number to a python complex number&lt;br&gt;
- Implement the rint ufunc&lt;br&gt;
- Make numpy.character usable as a dtype&lt;br&gt;
- Fix ndarray(dtype=str).fill()&lt;br&gt;
- Various fixes on boolean and fancy indexing&lt;br&gt;
&lt;br&gt;
Cheers&lt;br&gt;
Romain&lt;/p&gt;</description><category>numpy</category><guid>https://www.pypy.org/posts/2013/09/numpy-status-update-5160363918470470887.html</guid><pubDate>Wed, 25 Sep 2013 17:49:00 GMT</pubDate></item><item><title>NumPyPy Status Update</title><link>https://www.pypy.org/posts/2013/08/numpypy-status-update-3401163348519734658.html</link><dc:creator>Romain Guillebert</dc:creator><description>&lt;p&gt;Hello everyone&lt;br&gt;
&lt;br&gt;
As expected, nditer is a lot of work. I'm going to pause my work on it for now and focus on simpler and more important things, here is a list of what I implemented :&lt;br&gt;
&lt;/p&gt;&lt;ul&gt;
&lt;li&gt;Fixed a bug on 32 bit that made int32(123).dtype == dtype("int32") fail&lt;/li&gt;
&lt;li&gt;Fixed a bug on the pickling of array slices&lt;/li&gt;
&lt;li&gt;The external loop flag is implemented on the nditer class&lt;/li&gt;
&lt;li&gt;The c_index, f_index and multi_index flags are also implemented&lt;/li&gt;
&lt;li&gt;Add dtype("double") and dtype("str")&lt;/li&gt;
&lt;li&gt;C-style iteration is available for nditer&lt;/li&gt;
&lt;/ul&gt;
Cheers&lt;br&gt;
Romain Guillebert</description><category>numpy</category><guid>https://www.pypy.org/posts/2013/08/numpypy-status-update-3401163348519734658.html</guid><pubDate>Thu, 08 Aug 2013 19:01:00 GMT</pubDate></item><item><title>NumPyPy status update</title><link>https://www.pypy.org/posts/2013/06/numpypy-status-update-3846626188716521472.html</link><dc:creator>Romain Guillebert</dc:creator><description>&lt;p&gt;Hello everyone,&lt;br&gt;
&lt;br&gt;
May was the first month I was paid to work on NumPyPy (thanks to all who donated!), here is what I worked on during this period :&lt;br&gt;
&lt;br&gt;
&lt;/p&gt;&lt;ul&gt;
&lt;li&gt;It is now possible to use subarrays.&lt;/li&gt;
&lt;li&gt;It is now possible to pickle ndarrays (including those using subarrays), dtypes and scalars, the pickling protocol is the same as numpy's.&lt;/li&gt;
&lt;/ul&gt;
&lt;div&gt;
&lt;br&gt;&lt;/div&gt;
&lt;div&gt;
For June, I plan to work on the nditer class, it seems that there's enough work for an entire month.&lt;/div&gt;
&lt;br&gt;
Cheers&lt;br&gt;
Romain Guillebert</description><category>numpy</category><guid>https://www.pypy.org/posts/2013/06/numpypy-status-update-3846626188716521472.html</guid><pubDate>Mon, 03 Jun 2013 14:09:00 GMT</pubDate></item><item><title>Numpy Status Update</title><link>https://www.pypy.org/posts/2013/05/numpy-status-update-4176018422530420763.html</link><dc:creator>Romain Guillebert</dc:creator><description>&lt;p&gt;Hello Everyone,&lt;br&gt;
&lt;br&gt;
I've started to work on NumPyPy since the end of April and here is a short update :&lt;br&gt;
&lt;br&gt;
&lt;/p&gt;&lt;ul&gt;
&lt;li&gt;I implemented pickling support on ndarrays and dtypes, it will be compatible with numpy's pickling protocol when the "numpypy" module will be renamed to "numpy".&lt;/li&gt;
&lt;li&gt;I am now working on subarrays.&lt;/li&gt;
&lt;/ul&gt;
&lt;div&gt;
&lt;br&gt;&lt;/div&gt;
&lt;div&gt;
I would also like to thank everyone who donated and allowed me to work on this.&lt;/div&gt;
&lt;div&gt;
&lt;br&gt;&lt;/div&gt;
&lt;div&gt;
Cheers,&lt;/div&gt;
&lt;div&gt;
Romain Guillebert&lt;/div&gt;</description><category>numpy</category><guid>https://www.pypy.org/posts/2013/05/numpy-status-update-4176018422530420763.html</guid><pubDate>Sat, 11 May 2013 17:19:00 GMT</pubDate></item></channel></rss>