<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>PyPy (Posts by holger krekel)</title><link>https://www.pypy.org/</link><description></description><atom:link href="https://www.pypy.org/authors/holger-krekel.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents Â© 2025 &lt;a href="mailto:pypy-dev@pypy.org"&gt;The PyPy Team&lt;/a&gt; </copyright><lastBuildDate>Mon, 07 Jul 2025 11:01:29 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Speeding up PyPy by donations</title><link>https://www.pypy.org/posts/2010/11/speeding-up-pypy-by-donations-6035529829962326007.html</link><dc:creator>holger krekel</dc:creator><description>&lt;div class="document" id="pypy-joins-the-software-freedom-conservancy"&gt;
&lt;h3 class="title"&gt;PyPy joins the Software Freedom Conservancy&lt;/h3&gt;

&lt;p&gt;Good news. PyPy is now a member of the Software Freedom Conservancy (SFC),
see &lt;a class="reference external" href="https://sfconservancy.org/news/2010/nov/10/pypy-joins/"&gt;the SFC blog post&lt;/a&gt;.  This allows us to manage non-profit monetary aspects of
the project independently from a company or particular persons.   So we
can now officially receive donations both from people prefering right or
left sides, see the &lt;tt class="docutils literal"&gt;Donate&lt;/tt&gt; buttons on our &lt;a class="reference external" href="https://pypy.org/"&gt;home page&lt;/a&gt; and our &lt;a class="reference external" href="https://morepypy.blogspot.com/"&gt;blog&lt;/a&gt;.
And you can use PayPal or Google Checkout, Donations are tax-exempt in the
USA and hopefully soon in Europe as well.&lt;/p&gt;
&lt;p&gt;What's it going to get used for?  For the immediate future we intend to use
the donations for funding travels of core contributors to PyPy sprints
who otherwise can't afford to come.  So if you have no time but some
money you can help to encourage coding contributors to care for PyPy.
If we end up with bigger sums we'll see and take suggestions.  Money
spending decisions will be done by core PyPy people according to
non-profit guidelines.  And we'll post information from time to time
about how much we got and where the money went.&lt;/p&gt;
&lt;p&gt;If you have any questions regarding the SFC membership or donations
you may send email to sfc at pypy.org  which will be observed
by Carl Friedrich Bolz, Jacob Hallen and Holger Krekel - the initial
PyPy SFC representatives on behalf of the PyPy team.  Many thanks go
out to Bradley M. Kuhn for helping to implement the PyPy SFC membership.&lt;/p&gt;
&lt;p&gt;cheers,&lt;/p&gt;
&lt;p&gt;Holger &amp;amp; Carl Friedrich&lt;/p&gt;
&lt;/div&gt;</description><guid>https://www.pypy.org/posts/2010/11/speeding-up-pypy-by-donations-6035529829962326007.html</guid><pubDate>Wed, 10 Nov 2010 15:40:00 GMT</pubDate></item><item><title>PyPy talk at OpenBossa 09</title><link>https://www.pypy.org/posts/2009/03/pypy-talk-at-openbossa-09-5135830287297423499.html</link><dc:creator>holger krekel</dc:creator><description>&lt;p&gt;Yesterday i gave my &lt;a class="reference external" href="https://merlinux.eu/~hpk/pypy-openbossa09.pdf"&gt;PyPy status/mobile perspectives&lt;/a&gt; at OpenBossa, Nokia's developer conference for embedded platforms in Brazil.  Found it a bit of a tough task to do that in 50 minutes.  I had some 50, later more developers attending the talk and was happy with the questions and the feedback.  Guess it's a good sign if the number of people grows during a talk :)  It was the first time i tried to work more with pictures and actually used some devianart photos from &lt;a class="reference external" href="https://marikaz.deviantart.com/"&gt;Marikaz&lt;/a&gt; to mark section transitions.  I summarize/highlight some key points here in the post.&lt;/p&gt;
&lt;p&gt;After intro and 2.5 compatibility status, i talked about our measurements of PyPy's Python on Nokia's N810 internet tablet. The best bit is that for almost all Python data structures PyPy has smaller memory representations than CPython.  Particularly good are class instances which often score at 50% of CPython's sizes.  Startup time is also often better and can be improved.  On the bad side, PyPy's quite large base interpreter size and its bytecode execution is often worse. In the talk i also outline ideas for "perfect PYC files" for minimizing module import times and maximizing sharing across interpreter processes. I also briefly discussed the PyPy situation with extension modules and regarding C++ libs.  Most of these ideas arose from sprint discussions last year.  In the morning i also had some good talk with Stefan Seefeld about Boost Python and the new QT4 bindings.   Maybe to use Boost Python is also a good opportunity - but PyPy does not currently have a C-level or C++ level API.&lt;/p&gt;
&lt;p&gt;In subsequent lunch discussions people agreed that PyPy has three main interesting areas currently:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;the Python Just-In-Time Compiler&lt;/li&gt;
&lt;li&gt;a virtualized, sandboxed Python interpreter&lt;/li&gt;
&lt;li&gt;an efficient Python interpreter for small devices&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I think our upcoming 1.1 release will be a good point in time for many people to look some more into PyPy.  I hope we are crossing the chasm soon.  It's been a while since the project started :)  Getting some more sponsoring to sustain and increase our current efforts probably wouldn't hurt.&lt;/p&gt;
&lt;p&gt;Now i am off to spend my last day in Recife / Brazil, fly back to Germany in the evening and then spend time on preparing for Pycon 2009. And I guess i am going to enjoy some naturally cold air - at least my two jogging sessions at Brazillian beaches, at a sustained 30 degrees celsius, were tough.  I guess i shouldn't complain, though :)&lt;/p&gt;
&lt;p&gt;Was great meeting all the brazillian guys and the few women - just had breakfeast with Kate Alhola, kernel hacker and working on the new "Freemantle" graphical platform.  Many thanks go to Marcio Marcedo and the Python team at &lt;a class="reference external" href="https://www.indt.org/institutional/index.php"&gt;INDT&lt;/a&gt; who invited me here.  Hope to come again next year and eventually talk more about the Zone VM :)&lt;/p&gt;
&lt;p&gt;If you are interested in some more not so pypy-specific bits about the conference and what i experienced, you might head over to my &lt;a class="reference external" href="https://tetamap.wordpress.com"&gt;tetamap&lt;/a&gt; blog.&lt;/p&gt;
&lt;p&gt;holger&lt;/p&gt;</description><guid>https://www.pypy.org/posts/2009/03/pypy-talk-at-openbossa-09-5135830287297423499.html</guid><pubDate>Thu, 12 Mar 2009 14:00:00 GMT</pubDate></item><item><title>PyPy on Mobiles, at OpenBossa</title><link>https://www.pypy.org/posts/2009/03/pypy-on-mobiles-at-openbossa-845760004725129519.html</link><dc:creator>holger krekel</dc:creator><description>&lt;p&gt;Next week i am going to give a talk on PyPy at &lt;a class="reference external" href="https://www.bossaconference.indt.org/"&gt;OpenBossa&lt;/a&gt;, a developer conference on embedded platforms.  I've written up a bit more of my background and why i find it very interesting to go there &lt;a class="reference external" href="https://tetamap.wordpress.com"&gt;on my blog&lt;/a&gt;.  Probably will mostly follow up there or on twitter and not much here on the PyPy blog because it's not all about PyPy.  To summarize how i see it: i think there is great potential for Python and PyPy on mobiles and am thrilled to hear about what's going on currently and to discuss opportunities.&lt;/p&gt;
cheers, holger</description><guid>https://www.pypy.org/posts/2009/03/pypy-on-mobiles-at-openbossa-845760004725129519.html</guid><pubDate>Wed, 04 Mar 2009 20:36:00 GMT</pubDate></item><item><title>PyPy/Python at the Maemo summit</title><link>https://www.pypy.org/posts/2008/09/pypypython-at-maemo-summit-6115106472056714072.html</link><dc:creator>holger krekel</dc:creator><description>&lt;p&gt;Maciej and me visited the &lt;a class="reference" href="https://wiki.maemo.org/Maemo_Summit_2008"&gt;Maemo Summit&lt;/a&gt; in Berlin -
a community meetup around Nokia's Linux based
mobile platform.  We spontaneously did a lightning
talk about a first running pypy-c on Maemo
and got nice feedback.  

&lt;/p&gt;&lt;p&gt;We also had a nice lunch with guys from the &lt;a href="https://www.indt.org.br/institutional/index.php"&gt;INDT&lt;/a&gt; in Brazil, including Marcio Marcedo and &lt;a href="https://www.marceloeduardo.com/blog/"&gt;Marcelo Eduardo&lt;/a&gt;.  It turns out that Python is used a lot on Maemo, for example the nice &lt;a&gt;Canola&lt;/a&gt; UI is done with it.  Will be interesting to see how this shapes up in relation to the iPhone and Android.

&lt;/p&gt;&lt;p&gt;A lot of Nokia engineers were around and they announced that from October on they are going for weekly new releases of their SDK for the new Fremantle (Maemo-5) debian-based platform until the SDK becomes final - if we got this right.  

&lt;/p&gt;&lt;p&gt;Funnily enough, we met &lt;a href="https://mg.pov.lt/blog"&gt;Marius Gedminas&lt;/a&gt; from the Programmers of Vilnius - he gave a lightning talk on his impressions as a community member.  We think python programmers really should go much more to non-Python centric conferences.

&lt;/p&gt;&lt;p&gt;The whole event took place at the &lt;a href="https://www.c-base.org"&gt;C-Base&lt;/a&gt; - was a bit
crammed in some of the &lt;a href="https://wiki.maemo.org/Maemo_Summit_2008"&gt;sessions&lt;/a&gt; with something like 200 people attending.
&lt;br&gt;
cheers, Maciej and Holger&lt;/p&gt;</description><guid>https://www.pypy.org/posts/2008/09/pypypython-at-maemo-summit-6115106472056714072.html</guid><pubDate>Sat, 20 Sep 2008 13:58:00 GMT</pubDate></item><item><title>pylib/py.test 0.9.2 released</title><link>https://www.pypy.org/posts/2008/08/pylibpytest-092-released-6233865913406513469.html</link><dc:creator>holger krekel</dc:creator><description>&lt;p&gt;PyPy and &lt;a href="https://wyvern.cs.uni-duesseldorf.de/pypytest/summary.html"&gt;its 14638 automated tests&lt;/a&gt; use the py.test tool which is also used by many other projects.  PyPy developers have actually driven and contributed a lot to its development.  

I just released version &lt;a href="https://codespeak.net/py/dist/release-0.9.2.html"&gt;0.9.2 of the py lib&lt;/a&gt; mainly fixing Windows issues and providing better packaging and integration with setuptools.  It's usable completely independently from PyPy - "easy_install py" gives you the py.test command line. Of course you can run py.test on top of a translated PyPy version as well. Here is a quick summary of what the py lib provides besides py.test:
&lt;/p&gt;&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference" href="https://pylib.org/execnet.html"&gt;py.execnet&lt;/a&gt;: ad-hoc code distribution to SSH, Socket and local sub processes&lt;/li&gt;
&lt;li&gt;&lt;a class="reference" href="https://pylib.org/greenlet.html"&gt;py.magic.greenlet&lt;/a&gt;: micro-threads on standard CPython ("stackless-light") and PyPy&lt;/li&gt;
&lt;li&gt;&lt;a class="reference" href="https://pylib.org/path.html"&gt;py.path&lt;/a&gt;: path abstractions over local and subversion files&lt;/li&gt;
&lt;li&gt;&lt;a class="reference" href="https://pylib.org/code.html"&gt;py.code&lt;/a&gt;: dynamic code compile and traceback printing support&lt;/li&gt;
&lt;li&gt;tested against Linux, Win32, OSX, works on python 2.3-2.6&lt;/li&gt;
&lt;/ul&gt;
Good general entry points for installation and documentation:
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://pypi.python.org/pypi/py/"&gt;Pypi pages&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a href="https://codespeak.net/py/0.9.2/download.html"&gt;Download/Install&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a href="https://codespeak.net/py/0.9.2/index.html"&gt;Documentation/API&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;
have fun, holger krekel</description><category>release</category><guid>https://www.pypy.org/posts/2008/08/pylibpytest-092-released-6233865913406513469.html</guid><pubDate>Fri, 22 Aug 2008 12:32:00 GMT</pubDate></item><item><title>PyPy's Python runs Pinax / Django</title><link>https://www.pypy.org/posts/2008/07/pypys-python-runs-pinax-django-1265543049596913506.html</link><dc:creator>holger krekel</dc:creator><description>&lt;p&gt;During the EP2008 sprint we got &lt;a href="https://pinax.hotcluboffrance.com/"&gt;Pinax&lt;/a&gt; running on top of PyPy. At &lt;a href="https://play1.pypy.org:7788"&gt;our play1 server we have it running on top of pypy-c&lt;/a&gt;.  Not that you'll notice many differences to the original site but that's the point, isn't it? ... Well, in fact i am too lazy to customize our play1 version now - i rather spent a nice evening with the other sprint guys :) 

Pinax integrates numerous reusable &lt;a href="https://djangoproject.com"&gt;Django&lt;/a&gt; apps to take care of the things that many sites have in common. Many thanks particularly to Henrik Vendelbo who sorted out various Pinax and PyPy issues, and wrote up a nice &lt;a href="https://code.djangoproject.com/wiki/DjangoAndPyPy"&gt;DjangoAndPyPy wiki page&lt;/a&gt; describing the installation process.

greetings from Vilnius (Lithunia), Holger&lt;/p&gt;</description><guid>https://www.pypy.org/posts/2008/07/pypys-python-runs-pinax-django-1265543049596913506.html</guid><pubDate>Sat, 12 Jul 2008 18:10:00 GMT</pubDate></item><item><title>EP2008: PyPy meets Jython</title><link>https://www.pypy.org/posts/2008/07/ep2008-pypy-meets-jython-1107070144380217881.html</link><dc:creator>holger krekel</dc:creator><description>&lt;p&gt;One of the great events at EuroPython 2008 were our chats and meetings with the Jython and Sun people.  The Jython people recently are pushing into releasing Python version 2.5 and they currently pursue many interesting sub projects.  Coincidentally, PyPy also has tons of interesting areas and results :)  So we eventually got into brainstorming a number of possible technical collab ideas.  Further below is a first list as i wrote it down from our 10 people PyPy / Jython 30 minute close up meeting yesterday.

It felt great to be able to talk to the Jython people this way - kudos to Sun for their clear commitments and open ways to go about things!  I sense a genuine interest on fair collaboration with non-java developer communities.  Seems like they are serious about not focusing on "Java this", "Java that" anymore  but rather focus on the JVM platform.  Good!  And about language
independent interest in ambitious technology. Even Better!  I am tensed to see how things go from here.

So here the list of technical collab ideas:
&lt;/p&gt;&lt;ul&gt;&lt;li&gt;ctypes - try to create _rawffi module in Java for Jython, which will enable Jython to reuse our existing ctypes implementation (and have PyPy use the Jython-rawffi for its own for PyPy.JVM)&lt;/li&gt;&lt;li&gt; generally see to share work / (continue) collaborate regarding extension modules&lt;/li&gt;&lt;li&gt;Jython/PyPy (and eventually IronPython): document known differences to CPython, maybe in a PEP&lt;/li&gt;&lt;li&gt;Python Interpreter for Jython (in order to run CPython's .pyc files): re-use pypy's bytecode evaluator, implement a "Jython object space". &lt;/li&gt;&lt;li&gt;re-use rpython-extension modules for jython (e.g. SRE), by compiling them to Java and reusing as a native library.&lt;/li&gt;&lt;li&gt;collaborate on testing framework / benchmarking, have a common site to show test results&lt;/li&gt;&lt;li&gt;make py.test compatible with jython&lt;/li&gt;&lt;li&gt;come up with a set of "pure Python language" tests, which would gather and refactor tests from CPython, PyPy and Jython. &lt;/li&gt;&lt;li&gt;look into using java types / jython approaches for implementing free threading.&lt;/li&gt;&lt;li&gt;share knowledge regarding JIT / psyco
&lt;/li&gt;&lt;/ul&gt;If you have any more ideas, comments or would like to join efforts, let us know!

Cheers and thanks to &lt;a href="https://www.sauria.com/blog/"&gt;Ted Leung&lt;/a&gt;, &lt;a href="https://fwierzbicki.blogspot.com/"&gt;Frank Wierzbiki&lt;/a&gt;, &lt;a href="https://www.zyasoft.com/pythoneering/"&gt;Jim Baker&lt;/a&gt; and Tobias Ivarsson from Sun and Jython fame respectively,

Holger</description><category>ep2008</category><category>jython</category><category>pypy</category><category>sun</category><guid>https://www.pypy.org/posts/2008/07/ep2008-pypy-meets-jython-1107070144380217881.html</guid><pubDate>Thu, 10 Jul 2008 08:29:00 GMT</pubDate></item></channel></rss>