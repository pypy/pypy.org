.. title: RPython-based emulator speeds up RISC-V simulation over 15x
.. slug: rpython-used-to-speed-up-risc-v-simulation-over-15x
.. date: 2023-05-16 11:22:35 UTC
.. tags: casestudy,performance,pydrofoil
.. category: 
.. link: 
.. description: 
.. type: text
.. author: CF Bolz-Tereick

In cooperation with `RISC-V International`_, who funded a part of this project,
we recently created a workflow to
use RPython to take a `Sail RISC-V`_ model and automatically create a RISC-V ISA
emulator from it, which we call Pydrofoil_. The simulator sped up booting a
linux emulator from 35 minutes (using the standard Sail-generated emulator in
C) to 2 minutes, a speedup of 17.5x. More details about the process are in the
`RISC-V blog post`_.

A few take-aways from the project:

- While PyPy has shown it can speed up generic python code `about 4x`_, the
  technology behind PyPy can really shine in other areas.

- RPython is malleable and can be molded to many tasks, the RPython meta-JIT is
  very flexible.

- A JIT is well-suited for the problem of emulation, because it can
  perform dynamic binary translation.

PyPy can solve real world performance problems, even somewhat unusual ones.
Please `get in touch`_ and let us know how we can help you solve yours!

.. _`RISC-V International`: https://riscv.org/
.. _`Sail RISC-V`: https://github.com/riscv/sail-riscv#riscv-sail-model
.. _Pydrofoil: https://docs.pydrofoil.org
.. _`RISC-V blog post`:
   https://riscv.org/blog/2023/05/how-to-speed-up-the-emulating-process-with-pydrofoil-carl-friedrich/
.. _`about 4x`: https://speed.pypy.org
.. _`get in touch`: https://www.pypy.org/pypy-sponsors.html
