<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>PyPy (Posts about meta)</title><link>https://www.pypy.org/</link><description></description><atom:link href="https://www.pypy.org/categories/meta.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents © 2025 &lt;a href="mailto:pypy-dev@pypy.org"&gt;The PyPy Team&lt;/a&gt; </copyright><lastBuildDate>Mon, 07 Jul 2025 11:01:31 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>The PyPy Blog Turns 15 Years</title><link>https://www.pypy.org/posts/2022/10/blog-15-years.html</link><dc:creator>Carl Friedrich Bolz-Tereick</dc:creator><description>&lt;p&gt;Exactly 15 years ago today we wrote the &lt;a class="reference external" href="https://www.pypy.org/posts/2007/10/first-post-8150793557471983289.html"&gt;first blog post on the PyPy blog&lt;/a&gt;!
Over the years, we have written 423 posts, from the &lt;a class="reference external" href="https://www.pypy.org/posts/2007/12/faster-than-c-8057790636822502084.html"&gt;shortest&lt;/a&gt; to the
&lt;a class="reference external" href="https://www.pypy.org/posts/2022/07/toy-optimizer.html"&gt;longest&lt;/a&gt;. In 2021 we &lt;a class="reference external" href="https://www.pypy.org/posts/2021/03/pypys-blog-has-moved.html"&gt;moved&lt;/a&gt; from &lt;a class="reference external" href="https://morepypy.blogspot.com"&gt;blogger&lt;/a&gt; to our own domain.&lt;/p&gt;
&lt;p&gt;The topics over the years varied widely, we published &lt;a class="reference external" href="https://www.pypy.org/posts/2013/05/pypy-20-einstein-sandwich-635158782365435530.html"&gt;release&lt;/a&gt; &lt;a class="reference external" href="https://www.pypy.org/posts/2017/06/pypy-v58-released-739876359584854017.html"&gt;announcements&lt;/a&gt;;
&lt;a class="reference external" href="https://www.pypy.org/posts/2009/04/roadmap-for-jit-377358891902851723.html"&gt;roadmaps&lt;/a&gt;; &lt;a class="reference external" href="https://www.pypy.org/posts/2010/06/blackhole-interpreter-2752965445510091289.html"&gt;JIT&lt;/a&gt;, &lt;a class="reference external" href="https://www.pypy.org/posts/2013/10/incremental-garbage-collector-in-pypy-8956893523842234676.html"&gt;GC&lt;/a&gt; and &lt;a class="reference external" href="https://www.pypy.org/posts/2013/10/update-on-stm-7145890443443707910.html"&gt;STM&lt;/a&gt; &lt;a class="reference external" href="https://www.pypy.org/posts/2019/07/pypy-jit-for-aarch64-7161523403247118006.html"&gt;updates&lt;/a&gt;; &lt;a class="reference external" href="https://www.pypy.org/posts/2018/06/repeating-matrix-multiplication-8641748742577945875.html"&gt;benchmarks&lt;/a&gt;; &lt;a class="reference external" href="https://www.pypy.org/posts/2008/10/dsseldorf-sprint-report-days-1-3-5256639868851086032.html"&gt;sprint&lt;/a&gt;, &lt;a class="reference external" href="https://www.pypy.org/posts/2007/11/pypy-road-show-1-new-york-and-ibm-7837076523877011699.html"&gt;trip&lt;/a&gt; and
&lt;a class="reference external" href="https://www.pypy.org/posts/2009/07/ecoop-2009-8415055006373020774.html"&gt;conference&lt;/a&gt; &lt;a class="reference external" href="https://www.pypy.org/posts/2012/04/pycon-2012-wrap-up-559575896040055505.html"&gt;reports&lt;/a&gt;; &lt;a class="reference external" href="https://www.pypy.org/posts/2016/07/reverse-debugging-for-python-8854823774141612670.html"&gt;technical&lt;/a&gt; &lt;a class="reference external" href="https://www.pypy.org/posts/2010/11/efficiently-implementing-python-objects-3838329944323946932.html"&gt;deep&lt;/a&gt; &lt;a class="reference external" href="https://www.pypy.org/posts/2015/10/pypy-memory-and-warmup-improvements-2-4598780879518640015.html"&gt;dives&lt;/a&gt;; &lt;a class="reference external" href="https://www.pypy.org/posts/2022/02/nlp-icelandic-case-study.html"&gt;case studies&lt;/a&gt;; &lt;a class="reference external" href="https://www.pypy.org/posts/2008/04/trying-to-get-pypy-to-run-on-python-30-5082015544752137606.html"&gt;april&lt;/a&gt; &lt;a class="reference external" href="https://www.pypy.org/posts/2008/04/other-aprils-fools-ideas-955926452383759016.html"&gt;fool's
jokes&lt;/a&gt;; &lt;a class="reference external" href="https://www.pypy.org/posts/2015/03/pydgin-using-rpython-to-generate-fast-1514065178985838697.html"&gt;research&lt;/a&gt; projects; &lt;a class="reference external" href="https://www.pypy.org/posts/2013/02/announcing-topaz-rpython-powered-ruby-6662407703061538341.html"&gt;other&lt;/a&gt; &lt;a class="reference external" href="https://www.pypy.org/posts/2012/07/hello-everyone-6869934374873967346.html"&gt;languages&lt;/a&gt; &lt;a class="reference external" href="https://www.pypy.org/posts/2014/08/a-field-test-of-software-transactional-5659022209916605798.html"&gt;using&lt;/a&gt; RPython; finished &lt;a class="reference external" href="https://www.pypy.org/posts/2010/10/phd-thesis-about-pypys-cli-jit-backend-969267841095296323.html"&gt;PhD&lt;/a&gt;
&lt;a class="reference external" href="https://www.pypy.org/posts/2019/04/an-rpython-jit-for-lpegs-4779548053359386284.html"&gt;Bachelor&lt;/a&gt; and &lt;a class="reference external" href="https://www.pypy.org/posts/2008/10/prolog-jit-masters-thesis-finished-5462132148241449867.html"&gt;Master&lt;/a&gt;, theses; pictures:&lt;/p&gt;
&lt;a class="reference external image-reference" href="https://www.pypy.org/images/2022-pypy-pictures-collage.jpg"&gt;
&lt;img alt="a collage of photos taken at PyPy sprints" src="https://www.pypy.org/images/2022-pypy-pictures-collage-small.jpg"&gt;
&lt;/a&gt;
&lt;p&gt;and diagrams:&lt;/p&gt;
&lt;a class="reference external image-reference" href="https://www.pypy.org/images/2022-pypy-diagrams-collage.png"&gt;
&lt;img alt="a collage of diagrams from previous blog posts" src="https://www.pypy.org/images/2022-pypy-diagrams-collage-small.png"&gt;
&lt;/a&gt;
&lt;p&gt;Quite a number of blog posts were very early iterations of papers that we
published later, here are a few that I can remember:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://www.pypy.org/posts/2009/03/applying-tracing-jit-to-interpreter-3287844903778799266.html"&gt;Applying a Tracing JIT to an Interpreter&lt;/a&gt; became &lt;a class="reference external" href="https://dl.acm.org/doi/10.1145/1565824.1565827"&gt;Tracing the meta-level:
PyPy's tracing JIT compiler&lt;/a&gt; at ICOOOLPS 2009, by far our most successful
paper.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://www.pypy.org/posts/2010/09/escape-analysis-in-pypys-jit-1780048403046080197.html"&gt;Escape Analysis in PyPy's JIT&lt;/a&gt; became &lt;a class="reference external" href="https://dl.acm.org/doi/10.1145/1929501.1929508"&gt;Allocation removal by partial
evaluation in a tracing JIT&lt;/a&gt; at PEPM 2010.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://www.pypy.org/posts/2011/03/controlling-tracing-of-interpreter-with_21-6524148550848694588.html"&gt;Controlling the Tracing of an Interpreter With Hints&lt;/a&gt; was a draft of the
paper &lt;a class="reference external" href="https://dl.acm.org/doi/10.1145/2069172.2069181"&gt;Runtime feedback in a meta-tracing JIT for efficient dynamic
languages&lt;/a&gt; at ICOOOLPS 2011&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://www.pypy.org/posts/2010/09/using-escape-analysis-across-loop-2887031293132023676.html"&gt;Using Escape Analysis Across Loop Boundaries for Specialization&lt;/a&gt; was the
nucleus of &lt;a class="reference external" href="https://dl.acm.org/doi/10.1145/2384577.2384586"&gt;Loop-aware optimizations in PyPy's tracing JIT&lt;/a&gt; at DLS 2012.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://www.pypy.org/posts/2011/10/more-compact-lists-with-list-strategies-8229304944653956829.html"&gt;List Strategies&lt;/a&gt; was eventually turned into the paper &lt;a class="reference external" href="https://dl.acm.org/doi/10.1145/2509136.2509531"&gt;Storage strategies
for collections in dynamically typed languages&lt;/a&gt; at OOPSLA 2013.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;section id="greatest-hits"&gt;
&lt;h2&gt;Greatest Hits&lt;/h2&gt;
&lt;p&gt;In terms of visitors, the top five posts on the old blog were – on the new blog
we simply don't have stats (yet?):&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://www.pypy.org/posts/2017/08/lets-remove-global-interpreter-lock-748023554216649595.html"&gt;Let's remove the global interpreter lock&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://www.pypy.org/posts/2011/04/tutorial-writing-interpreter-with-pypy-3785910476193156295.html"&gt;Tutorial: Writing an Interpreter with PyPy, Part 1&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://www.pypy.org/posts/2019/10/pypys-new-json-parser-492911724084305501.html"&gt;PyPy's new JSON parser&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://www.pypy.org/posts/2016/08/pypy-gets-funding-from-mozilla-for-5569307998787871200.html"&gt;PyPy gets funding from Mozilla for Python 3.5 support&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://www.pypy.org/posts/2017/10/how-to-make-your-code-80-times-faster-1424098117108093942.html"&gt;How to make your code 80 times faster&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The number of posts per year developed like this:&lt;/p&gt;
&lt;img alt="/images/2022-pypy-posts-per-year.svg" src="https://www.pypy.org/images/2022-pypy-posts-per-year.svg"&gt;
&lt;p&gt;The most prolific authors are:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://www.pypy.org/authors/maciej-fijalkowski.html"&gt;Maciej Fijałkowski&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://www.pypy.org/authors/carl-friedrich-bolz-tereick.html"&gt;Carl Friedrich Bolz-Tereick&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://www.pypy.org/authors/armin-rigo.html"&gt;Armin Rigo&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://www.pypy.org/authors/antonio-cuni.html"&gt;Antonio Cuni&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://www.pypy.org/authors/mattip.html"&gt;Matti Picus&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Several blog posts have made it to the Hacker News front page, three of them to
number 1:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://www.pypy.org/posts/2014/07/pypy-stm-first-interesting-release-8684276541915333814.html"&gt;PyPy-STM: first “interesting” release&lt;/a&gt; (&lt;a class="reference external" href="https://news.ycombinator.com/item?id=7991404"&gt;discussion&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://www.pypy.org/posts/2017/08/lets-remove-global-interpreter-lock-748023554216649595.html"&gt;Let's Remove the Global Interpreter Lock&lt;/a&gt; (&lt;a class="reference external" href="https://news.ycombinator.com/item?id=15008636"&gt;discussion&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://www.pypy.org/posts/2018/09/inside-cpyext-why-emulating-cpython-c-8083064623681286567.html"&gt;Inside cpyext: Why emulating CPython C API is so Hard&lt;/a&gt; (&lt;a class="reference external" href="https://news.ycombinator.com/item?id=18040664"&gt;discussion&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/section&gt;
&lt;section id="personal-favourites"&gt;
&lt;h2&gt;Personal Favourites&lt;/h2&gt;
&lt;p&gt;While looking through the posts, there were a few that stood out to me in some
way, so here's a subjective list of ones that I had fun looking at again:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;2008: &lt;a class="reference external" href="https://www.pypy.org/posts/2008/10/sprint-discussions-jit-generator-3301578822967655604.html"&gt;Sprint Discussions: JIT Generator Planning&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;2009: &lt;a class="reference external" href="https://www.pypy.org/posts/2009/08/pypy-gets-new-compiler_25-6401910947439531107.html"&gt;PyPy gets a new compiler&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;2010: &lt;a class="reference external" href="https://www.pypy.org/posts/2010/12/oh-and-btw-pypy-gets-funding-through-3568486750776147382.html"&gt;Oh, and btw: PyPy gets funding through "Eurostars"&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;2011: &lt;a class="reference external" href="https://www.pypy.org/posts/2011/07/realtime-image-processing-in-python-6985924592886873374.html"&gt;Realtime image processing in Python&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;2012: &lt;a class="reference external" href="https://www.pypy.org/posts/2012/06/architecture-of-cppyy-9077100041707701102.html"&gt;Architecture of Cppyy&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;2013: &lt;a class="reference external" href="https://www.pypy.org/posts/2013/02/10-years-of-pypy-634401291726575821.html"&gt;10 years of PyPy&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;2014: &lt;a class="reference external" href="https://www.pypy.org/posts/2014/11/pypy-io-improvements-1042070332447047674.html"&gt;PyPy IO Improvements&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;2015: &lt;a class="reference external" href="https://www.pypy.org/posts/2015/10/automatic-simd-vectorization-support-in-639063580401330508.html"&gt;Automatic SIMD vectorization support in PyPy&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;2016: &lt;a class="reference external" href="https://www.pypy.org/posts/2016/04/pypy-enterprise-edition-3688275697656890948.html"&gt;PyPy Enterprise Edition&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;2017: &lt;a class="reference external" href="https://www.pypy.org/posts/2017/03/async-http-benchmarks-on-pypy3-1092124994927894138.html"&gt;Async HTTP benchmarks on PyPy3&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;2018: &lt;a class="reference external" href="https://www.pypy.org/posts/2018/04/improving-syntaxerror-in-pypy-5733639208090522433.html"&gt;Improving SyntaxError in PyPy&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;2018: &lt;a class="reference external" href="https://www.pypy.org/posts/2018/09/the-first-15-years-of-pypy-3412615975376972020.html#incentives-of-oss-compared-to-academia"&gt;The First 15 Years of PyPy — a Personal Retrospective&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;2019: &lt;a class="reference external" href="https://www.pypy.org/posts/2019/01/pypy-for-low-latency-systems-613165393301401965.html"&gt;PyPy for low-latency systems&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;2020: &lt;a class="reference external" href="https://www.pypy.org/posts/2020/02/pypy-and-cffi-have-moved-to-heptapod-5791595152472747032.html"&gt;PyPy and CFFI have moved to Heptapod&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;2021: &lt;a class="reference external" href="https://www.pypy.org/posts/2021/04/ways-pypy-graphviz.html"&gt;Some Ways that PyPy uses Graphviz&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We'd like to thank our authors, guest authors, commenters, users and readers who
have stuck with us through one and a half decades! If there's any particular
topics you would like to read something about, or any guest posts you'd like to
write, let us know!&lt;/p&gt;
&lt;/section&gt;</description><category>meta</category><guid>https://www.pypy.org/posts/2022/10/blog-15-years.html</guid><pubDate>Sun, 30 Oct 2022 12:00:00 GMT</pubDate></item></channel></rss>